name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#       - name: run train script
#       # the following line successfully triggers the training and can actually save the model on Neptune
#       # this means the communication from within the Github Actions container to outside is possible. 
#         env:
#           NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_API_TOKEN }}
#         run: bash ../../ML-pipeline-End2End/ML-pipeline-End2End/train/train.sh
      - name: fetch model from Neptune
        env:
          NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_API_TOKEN }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          pip install -r requirements/requirements.txt
          python ./artifacts/models/fetch_model.py
          pwd
          git status
          git add -A
          git status
        # git subtree split --prefix deploy -b deploy
        # git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git deploy
#       - name: deploy to Heroku
#         env:
#           NEPTUNE_API_TOKEN: ${{ secrets.NEPTUNE_API_TOKEN }}
#           HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
#           HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
#         run: |
#           git subtree push --prefix deploy https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      #   git subtree split --prefix deploy -b deploy
      #   git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git deploy        
